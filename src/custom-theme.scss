// Mobile-First Material Design Theme for Health Assessment Portal
@use '@angular/material' as mat;

// Include the common styles for Angular Material
@include mat.core();

// Define custom palettes for the health assessment portal
$primary-palette: (
  50: #e3f2fd,
  100: #bbdefb,
  200: #90caf9,
  300: #64b5f6,
  400: #42a5f5,
  500: #2196f3,
  600: #1e88e5,
  700: #1976d2,
  800: #1565c0,
  900: #0d47a1,
  A100: #82b1ff,
  A200: #448aff,
  A400: #2979ff,
  A700: #2962ff,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: white,
    A400: white,
    A700: white,
  )
);

$accent-palette: (
  50: #e8f5e8,
  100: #c8e6c8,
  200: #a5d6a5,
  300: #81c784,
  400: #66bb6a,
  500: #4caf50,
  600: #43a047,
  700: #388e3c,
  800: #2e7d32,
  900: #1b5e20,
  A100: #b9f6ca,
  A200: #69f0ae,
  A400: #00e676,
  A700: #00c853,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A400: rgba(black, 0.87),
    A700: white,
  )
);

$warn-palette: (
  50: #ffebee,
  100: #ffcdd2,
  200: #ef9a9a,
  300: #e57373,
  400: #ef5350,
  500: #f44336,
  600: #e53935,
  700: #d32f2f,
  800: #c62828,
  900: #b71c1c,
  A100: #ff8a80,
  A200: #ff5722,
  A400: #ff1744,
  A700: #d50000,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: white,
    A400: white,
    A700: white,
  )
);

// Create Material palettes
$primary: mat.define-palette($primary-palette, 600, 300, 800);
$accent: mat.define-palette($accent-palette, 500, 200, 700);
$warn: mat.define-palette($warn-palette, 500, 300, 700);

// Create light theme
$light-theme: mat.define-light-theme((
  color: (
    primary: $primary,
    accent: $accent,
    warn: $warn,
  ),
  typography: mat.define-typography-config(
    $font-family: '"Roboto", "Helvetica Neue", sans-serif',
    $headline-1: mat.define-typography-level(96px, 96px, 300, $letter-spacing: -1.5px),
    $headline-2: mat.define-typography-level(60px, 60px, 300, $letter-spacing: -0.5px),
    $headline-3: mat.define-typography-level(48px, 50px, 400),
    $headline-4: mat.define-typography-level(34px, 40px, 400, $letter-spacing: 0.25px),
    $headline-5: mat.define-typography-level(24px, 32px, 400),
    $headline-6: mat.define-typography-level(20px, 32px, 500, $letter-spacing: 0.15px),
    $subtitle-1: mat.define-typography-level(16px, 28px, 400, $letter-spacing: 0.15px),
    $subtitle-2: mat.define-typography-level(14px, 22px, 500, $letter-spacing: 0.1px),
    $body-1: mat.define-typography-level(16px, 24px, 400, $letter-spacing: 0.5px),
    $body-2: mat.define-typography-level(14px, 20px, 400, $letter-spacing: 0.25px),
    $caption: mat.define-typography-level(12px, 20px, 400, $letter-spacing: 0.4px),
    $button: mat.define-typography-level(14px, 36px, 500, $letter-spacing: 1.25px),
    $overline: mat.define-typography-level(10px, 32px, 400, $letter-spacing: 1.5px),
  ),
  density: 0,
));

// Create dark theme
$dark-theme: mat.define-dark-theme((
  color: (
    primary: $primary,
    accent: $accent,
    warn: $warn,
  ),
  typography: mat.define-typography-config(
    $font-family: '"Roboto", "Helvetica Neue", sans-serif',
  ),
  density: 0,
));

// Apply the light theme by default
@include mat.all-component-themes($light-theme);

// Custom CSS variables for consistent theming
:root {
  // Primary colors
  --primary-50: #{mat.get-color-from-palette($primary, 50)};
  --primary-100: #{mat.get-color-from-palette($primary, 100)};
  --primary-200: #{mat.get-color-from-palette($primary, 200)};
  --primary-300: #{mat.get-color-from-palette($primary, 300)};
  --primary-400: #{mat.get-color-from-palette($primary, 400)};
  --primary-500: #{mat.get-color-from-palette($primary, 500)};
  --primary-600: #{mat.get-color-from-palette($primary, 600)};
  --primary-700: #{mat.get-color-from-palette($primary, 700)};
  --primary-800: #{mat.get-color-from-palette($primary, 800)};
  --primary-900: #{mat.get-color-from-palette($primary, 900)};

  // Accent colors
  --accent-50: #{mat.get-color-from-palette($accent, 50)};
  --accent-100: #{mat.get-color-from-palette($accent, 100)};
  --accent-200: #{mat.get-color-from-palette($accent, 200)};
  --accent-300: #{mat.get-color-from-palette($accent, 300)};
  --accent-400: #{mat.get-color-from-palette($accent, 400)};
  --accent-500: #{mat.get-color-from-palette($accent, 500)};
  --accent-600: #{mat.get-color-from-palette($accent, 600)};
  --accent-700: #{mat.get-color-from-palette($accent, 700)};
  --accent-800: #{mat.get-color-from-palette($accent, 800)};
  --accent-900: #{mat.get-color-from-palette($accent, 900)};

  // Warn colors
  --warn-50: #{mat.get-color-from-palette($warn, 50)};
  --warn-100: #{mat.get-color-from-palette($warn, 100)};
  --warn-200: #{mat.get-color-from-palette($warn, 200)};
  --warn-300: #{mat.get-color-from-palette($warn, 300)};
  --warn-400: #{mat.get-color-from-palette($warn, 400)};
  --warn-500: #{mat.get-color-from-palette($warn, 500)};
  --warn-600: #{mat.get-color-from-palette($warn, 600)};
  --warn-700: #{mat.get-color-from-palette($warn, 700)};
  --warn-800: #{mat.get-color-from-palette($warn, 800)};
  --warn-900: #{mat.get-color-from-palette($warn, 900)};

  // Surface colors
  --surface: #fafafa;
  --surface-variant: #f5f5f5;
  --on-surface: rgba(0, 0, 0, 0.87);
  --on-surface-variant: rgba(0, 0, 0, 0.6);

  // Custom spacing for mobile-first design
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 16px;
  --spacing-lg: 24px;
  --spacing-xl: 32px;
  --spacing-xxl: 48px;

  // Mobile-first breakpoints
  --breakpoint-xs: 0px;
  --breakpoint-sm: 600px;
  --breakpoint-md: 960px;
  --breakpoint-lg: 1280px;
  --breakpoint-xl: 1920px;

  // Elevation shadows (mobile-optimized)
  --elevation-1: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  --elevation-2: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  --elevation-3: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  --elevation-4: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  --elevation-5: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);

  // Border radius
  --border-radius-sm: 4px;
  --border-radius-md: 8px;
  --border-radius-lg: 16px;
  --border-radius-xl: 24px;

  // Typography scale (mobile-optimized)
  --text-xs: 10px;
  --text-sm: 12px;
  --text-base: 14px;
  --text-lg: 16px;
  --text-xl: 18px;
  --text-2xl: 20px;
  --text-3xl: 24px;
  --text-4xl: 28px;
  --text-5xl: 32px;
}

// Dark theme support
.dark-theme {
  @include mat.all-component-colors($dark-theme);

  :root {
    --surface: #121212;
    --surface-variant: #1e1e1e;
    --on-surface: rgba(255, 255, 255, 0.87);
    --on-surface-variant: rgba(255, 255, 255, 0.6);
  }
}

// Global styles for Material components
html, body {
  height: 100%;
  margin: 0;
  font-family: 'Roboto', 'Helvetica Neue', sans-serif;
  background-color: var(--surface);
  color: var(--on-surface);
}

// Mobile-first responsive adjustments
@media (max-width: 599px) {
  :root {
    --text-base: 12px;
    --text-lg: 14px;
    --text-xl: 16px;
    --text-2xl: 18px;
    --text-3xl: 20px;
    --text-4xl: 24px;
    --text-5xl: 28px;
  }

  // Adjust Material component densities for mobile
  .mat-mdc-form-field {
    .mat-mdc-text-field-wrapper {
      padding: 0 12px;
    }
  }

  .mat-mdc-button {
    min-width: 44px;
    height: 44px;
  }

  .mat-mdc-icon-button {
    width: 44px;
    height: 44px;
  }

  .mat-mdc-card {
    margin: var(--spacing-sm);

    .mat-mdc-card-header {
      padding: var(--spacing-md);
    }

    .mat-mdc-card-content {
      padding: var(--spacing-md);
    }

    .mat-mdc-card-actions {
      padding: var(--spacing-sm) var(--spacing-md);
    }
  }
}

// Custom Material component overrides
.mat-mdc-card {
  box-shadow: var(--elevation-2);
  border-radius: var(--border-radius-lg);

  &.elevated {
    box-shadow: var(--elevation-3);
  }
}

.mat-mdc-button {
  border-radius: var(--border-radius-md);
  font-weight: 500;
  text-transform: none;

  &.mat-primary {
    background-color: var(--primary-600);
    color: white;

    &:hover {
      background-color: var(--primary-700);
    }
  }

  &.mat-accent {
    background-color: var(--accent-500);
    color: white;

    &:hover {
      background-color: var(--accent-600);
    }
  }
}

.mat-mdc-raised-button {
  box-shadow: var(--elevation-2);

  &:hover {
    box-shadow: var(--elevation-3);
  }
}

.mat-mdc-fab {
  box-shadow: var(--elevation-3);

  &:hover {
    box-shadow: var(--elevation-4);
  }
}

// Custom utility classes for consistent spacing
.mobile-padding {
  padding: var(--spacing-md);

  @media (max-width: 599px) {
    padding: var(--spacing-sm);
  }
}

.mobile-margin {
  margin: var(--spacing-md);

  @media (max-width: 599px) {
    margin: var(--spacing-sm);
  }
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 var(--spacing-md);

  @media (max-width: 599px) {
    padding: 0 var(--spacing-sm);
  }
}

// Accessibility improvements
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .mat-mdc-card {
    border: 1px solid var(--on-surface);
  }

  .mat-mdc-button {
    border: 1px solid currentColor;
  }
}
